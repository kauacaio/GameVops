version: '3.9'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytls.acme.tlschallenge=true"
      - "--certificatesresolvers.mytls.acme.email=kauacaiog@gmail.com"
      - "--certificatesresolvers.mytls.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    restart: always

  app:
    image: /:alpine
    container_name: app
    labels:
      - "traefik.http.routers.app.rule=Host(`gamevops.tech`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=mytls"
    restart: always

  db:
    image: postgres:14
    container_name: gamevops_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: securepassword123
      POSTGRES_DB: gamevopsdb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    labels:
      - "traefik.http.routers.db.rule=Host(`db.gamevops.tech`)"
      - "traefik.http.routers.db.entrypoints=websecure"
      - "traefik.http.routers.db.tls.certresolver=mytls"
    restart: always

  backend:
    build:
      context: ./backend
    container_name: gamevops_backend
    ports:
      - "3000:3000"
    environment:
      DB_HOST: db
      DB_USER: admin
      DB_PASSWORD: securepassword123
      DB_NAME: gamevopsdb
    depends_on:
      - db
    labels:
      - "traefik.http.routers.backend.rule=Host(`backend.gamevops.tech`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=mytls"
    restart: always

volumes:
  db_data:
